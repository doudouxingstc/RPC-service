syntax = "proto3";

package dfs_service;

service DFSService {

    // Add your service calls here

    // 1. REQUIRED (Parts 1 & 2): A method to store files on the server
    rpc StoreFile (stream FileData) returns (FileInfo); // TODO: FileInfo or ReturnFileInfo??

    // 2. REQUIRED (Parts 1 & 2): A method to fetch files from the server
    rpc FetchFile (RequestFile) returns (stream FileData);

    // 3. REQUIRED (Parts 1 & 2): A method to list all files on the server
    rpc ListFiles (Void) returns (FileList);

    // 4. REQUIRED (Parts 1 & 2): A method to get the status of a file on the server
    rpc GetFileStatus (RequestFile) returns (FileInfo);

    // 5. REQUIRED (Part 2 only): A method to request a write lock from the server
    rpc RequestWriteLock (RequestFile) returns (Void); 

    // 6. REQUIRED (Part 2 only): A method named CallbackList to handle asynchronous file listing requests
    //                            from a client. This method should return a listing of files along with their
    //                            attribute information. The expected attribute information should include name,
    //                            size, modified time, and creation time.
    rpc CallbackList (RequestFile) returns (FileList);  // TODO: Do not understand

    // 7. REQUIRED (Part 2 only): A method to delete a file from the server
    rpc DeleteFile (RequestFile) returns (FileInfo);

    // 8. Any other methods you deem necessary to complete the tasks of this assignment
}

// Add your message types here
message FileInfo {
    string name = 1;
    int64 mdf_time = 2;
    int64 crt_time = 3;
    int64 file_size = 4;
    string client_id = 12;
}

message FileData {
    bytes data = 5;
}

message FileList {
    repeated FileInfo files = 6;
}

message ReturnMsg {
    string msg = 7;
}

message RequestFile {
    string name = 8;
    string request_client_id = 9;
    int64 client_file_crc = 13;
    int64 request_mdf_time = 14;
}

message ReturnFileInfo {
    string name = 10;
    int64 return_mdf_time = 11;
}

message Void {}